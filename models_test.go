package keras

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestPredict(t *testing.T) {
	model := Sequential{
		layers: []Layer{
			&Dense{
				OutputDim:  15,
				InputDim:   15,
				Activation: relu,
				Weights: [][]float64{
					{
						-5.39829075e-01, -1.02522373e-01, -8.07035808e-03,
						-6.22558177e-01, -2.54711342e+00, -3.50809604e-01,
						-2.33781242e+00, -3.85060966e-01, -1.39101839e+00,
						-1.59819055e+00, -1.39041737e-01, -3.09598744e-02,
						-3.41485918e-01, -5.42149007e-01, -3.92133817e-02,
					}, {
						-4.35285300e-01, -4.34553295e-01, 8.76053199e-02,
						-4.87875909e-01, -2.80408597e+00, -5.02893865e-01,
						-2.48701572e+00, -3.00299138e-01, -1.04421401e+00,
						-1.35027432e+00, -8.00796032e-01, -1.04608737e-01,
						-1.92705750e-01, -6.31671607e-01, -2.64640376e-02,
					}, {
						-7.00736105e-01, 1.95371713e-02, 4.15520323e-03,
						-1.65830582e-01, -2.06831670e+00, -9.11909118e-02,
						-2.60871673e+00, -1.32149339e-01, -5.56645036e-01,
						-5.48722029e-01, -1.36648700e-01, -9.26324129e-02,
						-8.13945010e-02, -4.29180533e-01, -7.47937635e-02,
					}, {
						2.33303666e-01, -3.16360563e-01, -1.14008144e-01,
						-1.25510648e-01, -1.87927711e+00, -6.62312424e-03,
						-2.61052322e+00, -2.05177799e-01, -4.28057641e-01,
						-5.63384369e-02, -2.17675790e-01, -1.40085801e-01,
						-4.23687816e-01, -3.45758945e-01, -4.57508653e-01,
					}, {
						-3.17688555e-01, -4.98238243e-02, -4.88062352e-02,
						-2.31206283e-01, -1.66057646e+00, -1.72899306e-01,
						-1.04902232e+00, -1.59776673e-01, -5.31490624e-01,
						-2.59046108e-01, -2.43635401e-02, -1.09573118e-01,
						-8.95436406e-01, -2.88664132e-01, -7.42850840e-01,
					}, {
						-1.18827216e-01, -1.69236585e-01, -8.84599313e-02,
						-3.65792066e-02, -1.89288333e-01, 5.89431599e-02,
						-2.53673881e-01, -2.28596345e-01, -1.04259498e-01,
						-3.97350714e-02, -3.99142921e-01, 1.60369530e-01,
						1.35278585e-03, 1.94229595e-02, -1.52450070e-01,
					}, {
						2.37085462e-01, 2.44777367e-01, -2.40610428e-02,
						2.20880788e-02, -1.60565302e-01, -4.45853263e-01,
						-8.65145400e-02, 1.96879148e-01, 1.69106081e-01,
						3.34020704e-02, 1.51233673e-01, 2.23683685e-01,
						2.96878755e-01, 3.43522638e-01, -1.38479710e-01,
					}, {
						-4.38907713e-01, -3.66584212e-01, -1.10663623e-02,
						-3.90947312e-01, -3.31671566e-01, -1.66834116e-01,
						-5.18348277e-01, 1.00680903e-01, -1.37742877e-01,
						-2.24475693e-02, 7.03958794e-02, 2.98201174e-01,
						-3.58459562e-01, 3.30475718e-02, -1.37545407e-01,
					}, {
						1.02864288e-01, -3.01077455e-01, 7.42961243e-02,
						-1.76488861e-01, 2.10741162e-03, 1.95890099e-01,
						-4.78262365e-01, -4.59145615e-03, -3.58872861e-02,
						-1.26728281e-01, -3.55921894e-01, 2.38665670e-01,
						-7.83053860e-02, -7.77936950e-02, 4.28227661e-03,
					}, {
						2.83039838e-01, -2.22132549e-01, 1.93830773e-01,
						-1.87839895e-01, -1.79239437e-01, 2.32059300e-01,
						-2.99624234e-01, 2.86609918e-01, -2.05681533e-01,
						-7.24672386e-03, -6.05930537e-02, -5.09273782e-02,
						-3.02375499e-02, -4.54355702e-02, -1.12047791e-01,
					}, {
						-2.36512229e-01, -2.13473901e-01, -8.46780092e-02,
						-5.66828363e-02, -4.13935363e-01, -3.26436073e-01,
						-2.76001561e-02, -3.23564142e-01, -2.70972960e-03,
						-1.13157295e-01, 3.18252414e-01, 9.28681567e-02,
						8.53414163e-02, -1.40772805e-01, 2.63966955e-02,
					}, {
						9.79880616e-02, -4.74562943e-02, -2.31954688e-03,
						1.20099299e-01, -1.08888187e-01, 3.69048193e-02,
						-3.96179520e-02, -3.98280442e-01, 1.23486459e-01,
						1.13152593e-01, -1.32672846e-01, 1.32515445e-01,
						-1.88664988e-01, 8.11147764e-02, 1.27595976e-01,
					}, {
						2.96699077e-01, -3.88875008e-01, 2.56505627e-02,
						-4.27843064e-01, 1.57075882e-01, 2.93057323e-01,
						-1.08693480e-01, -4.01100606e-01, -3.41281801e-01,
						-1.95471823e-01, -1.31586954e-01, 3.29446495e-01,
						6.62191957e-02, -2.58286279e-02, 1.20547554e-03,
					}, {
						-5.64621501e-02, -3.44495595e-01, 1.65407121e-01,
						-9.00617801e-03, -2.75750607e-01, -3.29410344e-01,
						-2.39367127e-01, -3.25423717e-01, -3.22963685e-01,
						-2.19756905e-02, -7.72736312e-05, 4.15848583e-01,
						-3.70357335e-02, 1.02661699e-01, -1.65034741e-01,
					}, {
						1.33624896e-01, -3.44506428e-02, 1.45413387e+00,
						-4.63680029e-01, -1.93102449e-01, -3.94655794e-01,
						-3.75189185e-02, -2.56473273e-01, -1.87602565e-01,
						7.48065813e-03, -7.00160563e-02, 5.96679986e-01,
						3.99677455e-01, 2.79032797e-01, -8.48945439e-01,
					},
				},
				Bias: []float64{
					0.12116417, -0.00901583, 0.21457036, -0.00631936, -0.34223026,
					-0.2480877, -0.0100284, -0.14419849, 0.32447198, -0.20832083,
					-0.07991717, 0.48658109, 0.22262922, -0.11932528, 1.73494387,
				},
			},
			&Dense{
				OutputDim:  2,
				InputDim:   15,
				Activation: relu,
				Weights: [][]float64{
					{-1.53226154e-02, 4.86813970e-02},
					{-4.42723632e-01, 9.07800049e-02},
					{1.76529847e-02, -5.11107147e-01},
					{-5.46529412e-01, -1.42867100e+00},
					{-1.26699276e+01, -2.06744194e+01},
					{3.91453132e-02, -1.28667414e-01},
					{-7.42676544e+00, -8.62997055e+00},
					{7.35086128e-02, -2.64296066e-02},
					{3.79233688e-01, 5.55071294e-01},
					{4.83461332e+00, 3.81751466e+00},
					{-4.92184073e-01, -3.44126195e-01},
					{-2.81047728e-02, -2.42215961e-01},
					{2.25007847e-01, -1.60595611e-01},
					{-4.05160755e-01, -2.96061933e-01},
					{1.10807717e-01, 3.12508792e-01},
				},
				Bias: []float64{6.67937326, 8.45922089},
			},
		},
	}
	x := []float64{36, 23, 27, 28, 25, 2, 3, 3, 3, 9, 0, 0, 2, 2, 5}
	y := []float64{6.80253124, 4.89342308}

	assert.InDeltaSlice(t, y, model.Predict(x), 0.000001)
}
